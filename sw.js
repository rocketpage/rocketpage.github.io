const CACHE_VERSION=2,CURRENT_CACHE=`main-${2}`,cacheFiles=["/"];self.addEventListener("activate",a=>a.waitUntil(caches.keys().then(a=>Promise.all(a.map(a=>{if(a!==CURRENT_CACHE)return caches.delete(a)}))))),self.addEventListener("install",a=>a.waitUntil(caches.open(CURRENT_CACHE).then(a=>a.addAll(cacheFiles))));const fromNetwork=(a,b)=>new Promise((c,d)=>{const e=setTimeout(d,b);fetch(a).then(b=>{clearTimeout(e),c(b),update(a)},d)}),fromCache=a=>caches.open(CURRENT_CACHE).then(b=>b.match(a).then(a=>a||b.match("/"))),update=a=>caches.open(CURRENT_CACHE).then(b=>fetch(a).then(c=>b.put(a,c)));self.addEventListener("fetch",a=>{a.respondWith(fromNetwork(a.request,1e4).catch(()=>fromCache(a.request))),a.waitUntil(update(a.request))});
